#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_Pot.headers.fc";
#include "tact_Pot.stdlib.fc";
#include "tact_Pot.constants.fc";
#include "tact_Pot.storage.fc";

;;
;; Contract Pot functions
;;

(int) $Pot$_contract_init(int $id) impure inline_ref {
    var (($self'id)) = (null());
    $self'id = $id;
    return ($self'id);
}

((int), ()) $Pot$_fun_requireOwner((int) $self) impure inline_ref {
    var (($self'id)) = $self;
    return (($self'id), ());
}

((int), int) $Pot$_fun_balance((int) $self) impure inline_ref {
    var (($self'id)) = $self;
    return (($self'id), (__tact_my_balance() - 500000000));
}

;;
;; Receivers of a Contract Pot
;;

(((int)), ()) %$Pot$_internal_empty((int) $self) impure inline {
    var ($self'id) = $self;
    return (($self'id), ());
}

(((int)), ()) $Pot$_internal_binary_ReturnFee((int) $self, (slice, int) $req) impure inline {
    var ($self'id) = $self;
    var ($req'wallet, $req'amount) = $req;
    int $amount = min($req'amount, (__tact_my_balance() - 500000000));
    $global_send($SendParameters$_constructor_to_value_mode_bounce($req'wallet, $amount, 66, true));
    return (($self'id), ());
}

(((int)), ()) $Pot$_internal_binary_DistributeReward((int) $self, (cell, int, cell) $req) impure inline {
    var ($self'id) = $self;
    var ($req'wallets, $req'userCount, $req'rewardsStars) = $req;
    try {
        int $i = 0;
        while (($i < $req'userCount)) {
            $global_send($SendParameters$_constructor_to_value_mode_bounce(__tact_not_null(__tact_dict_get_int_slice($req'wallets, 257, $i)), __tact_not_null(__tact_dict_get_int_int($req'rewardsStars, 257, $i, 257)), 2, true));
            $i = ($i + 1);
            __tact_debug_str(__tact_int_to_string($i), __gen_slice_string_397fc7310b86c7db53ed2eb3d34bf112cebc8e1a0593ae1c47a7a44cf8f8e70f(), "File contracts/pot.tact:60:17:");
        }
    } catch (_, $err) {
        __tact_debug_str(__tact_int_to_string($err), __gen_slice_string_7a3cd242d362c5e9bc2768f2913ab5c68a797aa94aea2f2c9ac48310c49f2495(), "File contracts/pot.tact:63:13:");
    }
    return (($self'id), ());
}

(((int)), ()) $Pot$_internal_binary_RequestAll((int) $self, (int) $req) impure inline {
    var ($self'id) = $self;
    var ($req'preserve) = $req;
    try {
        ($self'id)~$Pot$_fun_requireOwner();
        int $amount = ((__tact_my_balance() - 500000000) - $req'preserve);
        $global_send($SendParameters$_constructor_to_value_mode_bounce(__tact_context_get_sender(), $amount, 66, true));
    } catch (_, $err) {
        __tact_debug_str(__tact_int_to_string($err), __gen_slice_string_7a3cd242d362c5e9bc2768f2913ab5c68a797aa94aea2f2c9ac48310c49f2495(), "File contracts/pot.tact:79:13:");
    }
    return (($self'id), ());
}

(((int)), ()) $Pot$_internal_binary_Deploy((int) $self, (int) $deploy) impure inline {
    var ($self'id) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'id)~$Pot$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'id), ());
}

;;
;; Get methods of a Contract Pot
;;

_ %balance() method_id(104128) {
    var self = $Pot$_contract_load();
    var res = self~$Pot$_fun_balance();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Pot
;;

((int), int) $Pot$_contract_router_internal((int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$Pot$_internal_empty();
        return (self, true);
    }
    
    ;; Receive ReturnFee message
    if (op == 3995285514) {
        var msg = in_msg~$ReturnFee$_load();
        self~$Pot$_internal_binary_ReturnFee(msg);
        return (self, true);
    }
    
    ;; Receive DistributeReward message
    if (op == 461056004) {
        var msg = in_msg~$DistributeReward$_load();
        self~$Pot$_internal_binary_DistributeReward(msg);
        return (self, true);
    }
    
    ;; Receive RequestAll message
    if (op == 3556090125) {
        var msg = in_msg~$RequestAll$_load();
        self~$Pot$_internal_binary_RequestAll(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Pot$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Pot$_contract_load();
    
    ;; Handle operation
    int handled = self~$Pot$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Pot$_contract_store(self);
}
