;;
;; Header files for Pot
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $ReturnFee$_load
(slice, ((slice, int))) $ReturnFee$_load(slice sc_0) inline;

;; $DistributeReward$_load
(slice, ((cell, int, cell))) $DistributeReward$_load(slice sc_0) inline;

;; $RequestAll$_load
(slice, ((int))) $RequestAll$_load(slice sc_0) inline;

;; $Pot$_store
builder $Pot$_store(builder build_0, (int) v) inline;

;; $Pot$_load
(slice, ((int))) $Pot$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Pot$init$_load
(slice, ((int))) $Pot$init$_load(slice sc_0) inline;

;; $Pot$_contract_init
(int) $Pot$_contract_init(int $id) impure inline_ref;

;; $Pot$_contract_load
(int) $Pot$_contract_load() impure inline_ref;

;; $Pot$_contract_store
() $Pot$_contract_store((int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Pot$_fun_requireOwner
((int), ()) $Pot$_fun_requireOwner((int) $self) impure inline_ref;

;; $Pot$_fun_balance
((int), int) $Pot$_fun_balance((int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Pot$_fun_forward
((int), ()) $Pot$_fun_forward((int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Pot$_fun_notify
((int), ()) $Pot$_fun_notify((int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice $to, int $value, int $mode, int $bounce) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
