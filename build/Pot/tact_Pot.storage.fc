;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline {
    return ($bounce, $to, $value, $mode, $body, $code, $data);
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice $to, int $value, int $mode, int $bounce) inline {
    return ($bounce, $to, $value, $mode, null(), null(), null());
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int $queryId) inline {
    return ($queryId);
}

;;
;; Type: ReturnFee
;; Header: 0xee23380a
;; TLB: return_fee#ee23380a wallet:address amount:int257 = ReturnFee
;;

(slice, ((slice, int))) $ReturnFee$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3995285514);
    var v'wallet = sc_0~__tact_load_address();
    var v'amount = sc_0~load_int(257);
    return (sc_0, (v'wallet, v'amount));
}

;;
;; Type: DistributeReward
;; Header: 0x1b7b2804
;; TLB: distribute_reward#1b7b2804 wallets:dict<int, address> userCount:int257 rewardsStars:dict<int, int> = DistributeReward
;;

(slice, ((cell, int, cell))) $DistributeReward$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 461056004);
    var v'wallets = sc_0~load_dict();
    var v'userCount = sc_0~load_int(257);
    var v'rewardsStars = sc_0~load_dict();
    return (sc_0, (v'wallets, v'userCount, v'rewardsStars));
}

;;
;; Type: RequestAll
;; Header: 0xd3f5a10d
;; TLB: request_all#d3f5a10d preserve:int257 = RequestAll
;;

(slice, ((int))) $RequestAll$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3556090125);
    var v'preserve = sc_0~load_int(257);
    return (sc_0, (v'preserve));
}

;;
;; Type: Pot
;;

builder $Pot$_store(builder build_0, (int) v) inline {
    var (v'id) = v;
    build_0 = build_0.store_int(v'id, 257);
    return build_0;
}

(slice, ((int))) $Pot$_load(slice sc_0) inline {
    var v'id = sc_0~load_int(257);
    return (sc_0, (v'id));
}

(slice, ((int))) $Pot$init$_load(slice sc_0) inline {
    var v'id = sc_0~load_int(257);
    return (sc_0, (v'id));
}

(int) $Pot$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Pot$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (int $id) = $sc~$Pot$init$_load();
        $sc.end_parse();
        return $Pot$_contract_init($id);
    }
}

() $Pot$_contract_store((int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Pot$_store(b, v);
    set_data(b.end_cell());
}